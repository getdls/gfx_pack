#version 430
#extension GL_ARB_texture_gather : enable
#extension GL_ARB_separate_shader_objects : enable
// shader 52fe849914fae2e6
// start of shader inputs/outputs, predetermined by Cemu. Do not touch
#ifdef VULKAN
#define ATTR_LAYOUT(__vkSet, __location) layout(set = __vkSet, location = __location)
#define UNIFORM_BUFFER_LAYOUT(__glLocation, __vkSet, __vkLocation) layout(set = __vkSet, binding = __vkLocation, std140)
#define TEXTURE_LAYOUT(__glLocation, __vkSet, __vkLocation) layout(set = __vkSet, binding = __vkLocation)
#define GET_FRAGCOORD() vec4(gl_FragCoord.xy*uf_fragCoordScale.xy,gl_FragCoord.zw)
#else
#define ATTR_LAYOUT(__vkSet, __location) layout(location = __location)
#define UNIFORM_BUFFER_LAYOUT(__glLocation, __vkSet, __vkLocation) layout(binding = __glLocation, std140) 
#define TEXTURE_LAYOUT(__glLocation, __vkSet, __vkLocation) layout(binding = __glLocation)
#define GET_FRAGCOORD() vec4(gl_FragCoord.xy*uf_fragCoordScale,gl_FragCoord.zw)
#endif
#ifdef VULKAN
layout(set = 1, binding = 1) uniform ufBlock
{
uniform vec4 uf_fragCoordScale;
};
#else
uniform vec2 uf_fragCoordScale;
#endif
TEXTURE_LAYOUT(0, 1, 0) uniform sampler2D textureUnitPS0;
layout(location = 0) in vec4 passParameterSem133;
layout(location = 0) out vec4 passPixelColor0;
// end of shader inputs/outputs
int clampFI32(int v)
{
if( v == 0x7FFFFFFF )
	return floatBitsToInt(1.0);
else if( v == 0xFFFFFFFF )
	return floatBitsToInt(0.0);
return floatBitsToInt(clamp(intBitsToFloat(v), 0.0, 1.0));
}
float mul_nonIEEE(float a, float b){ if( a == 0.0 || b == 0.0 ) return 0.0; return a*b; }
void main()
{
ivec4 R0i = ivec4(0);
ivec4 R1i = ivec4(0);
ivec4 R2i = ivec4(0);
ivec4 R3i = ivec4(0);
ivec4 R123i = ivec4(0);
ivec4 R127i = ivec4(0);
int backupReg0i, backupReg1i, backupReg2i, backupReg3i, backupReg4i;
ivec4 PV0i = ivec4(0), PV1i = ivec4(0);
int PS0i = 0, PS1i = 0;
ivec4 tempi = ivec4(0);
float tempResultf;
int tempResulti;
ivec4 ARi = ivec4(0);
bool predResult = true;
vec3 cubeMapSTM;
int cubeMapFaceId;
R0i = floatBitsToInt(passParameterSem133);
R2i.xyz = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R0i.xy)).xyz);
// 0
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(0):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(0):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbbb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbb75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0xbaf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + 0.0);
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3af5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3b75c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.w == 0)?(R1i.x):(PV1i.z));
R3i.y = ((PV1i.w == 0)?(R1i.y):(PV1i.y));
R0i.z = ((PV1i.w == 0)?(R1i.z):(PV1i.x));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bb851ec));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbc23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbbda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0xbb5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + 0.0);
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3b5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3bda740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
R3i.x = ((PV1i.z == 0)?(R1i.x):(PV1i.y));
R3i.y = ((PV1i.z == 0)?(R1i.y):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(R1i.z):(PV1i.w));
// 3
backupReg0i = R2i.x;
R1i.x = floatBitsToInt(intBitsToFloat(R0i.x) + intBitsToFloat(0x3bf5c290));
R1i.y = floatBitsToInt(intBitsToFloat(R0i.y) + intBitsToFloat(0x3c23d70b));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.x));
PS1i = R2i.x;
R1i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R1i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R3i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R0i.z));
PV0i.w = ((0.0 >= intBitsToFloat(R1i.w))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R3i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R3i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R0i.z):(0));
PV1i.w = R123i.w;
// 2
backupReg0i = R1i.x;
backupReg1i = R1i.y;
backupReg2i = R1i.z;
R1i.x = ((PV1i.z == 0)?(backupReg0i):(PV1i.y));
R1i.y = ((PV1i.z == 0)?(backupReg1i):(PV1i.x));
R1i.z = ((PV1i.z == 0)?(backupReg2i):(PV1i.w));
// 3
backupReg0i = R0i.x;
backupReg1i = R0i.y;
backupReg2i = R2i.x;
R0i.x = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(0x3bf5c290));
R0i.y = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(0x3c5a740f));
R2i.x = floatBitsToInt(intBitsToFloat(backupReg2i) + intBitsToFloat(R1i.x));
PS1i = R2i.x;
R0i.xyzw = floatBitsToInt(texture(textureUnitPS0, intBitsToFloat(R0i.xy)).xyzw);
// 0
backupReg0i = R2i.y;
backupReg1i = R2i.z;
backupReg2i = R0i.w;
R2i.y = floatBitsToInt(intBitsToFloat(backupReg0i) + intBitsToFloat(R1i.y));
R2i.z = floatBitsToInt(intBitsToFloat(backupReg1i) + intBitsToFloat(R1i.z));
PV0i.w = ((0.0 >= intBitsToFloat(backupReg2i))?int(0xFFFFFFFF):int(0x0));
// 1
R123i.x = ((PV0i.w == 0)?(R1i.y):(0));
PV1i.x = R123i.x;
R123i.y = ((PV0i.w == 0)?(R1i.x):(0));
PV1i.y = R123i.y;
R123i.z = ((PV0i.w == 0)?(0):(0x3f800000));
PV1i.z = R123i.z;
R123i.w = ((PV0i.w == 0)?(R1i.z):(0));
PV1i.w = R123i.w;
// 2
backupReg0i = R0i.x;
backupReg1i = R0i.y;
backupReg2i = R0i.z;
R0i.x = ((PV1i.z == 0)?(backupReg0i):(PV1i.y));
R0i.y = ((PV1i.z == 0)?(backupReg1i):(PV1i.x));
R0i.z = ((PV1i.z == 0)?(backupReg2i):(PV1i.w));
// 3
R127i.xyz = floatBitsToInt(vec3(intBitsToFloat(R2i.x),intBitsToFloat(R2i.y),intBitsToFloat(R2i.z)) + vec3(intBitsToFloat(R0i.x),intBitsToFloat(R0i.y),intBitsToFloat(R0i.z)));
PV1i.x = R127i.x;
PV1i.y = R127i.y;
PV1i.z = R127i.z;
R0i.w = 0x3f800000;
// 4
tempi.x = floatBitsToInt(dot(vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),-0.0),vec4(intBitsToFloat(PV1i.x),intBitsToFloat(PV1i.y),intBitsToFloat(PV1i.z),0.0)));
PV0i.x = tempi.x;
PV0i.y = tempi.x;
PV0i.z = tempi.x;
PV0i.w = tempi.x;
// 5
tempResultf = 1.0 / sqrt(intBitsToFloat(PV0i.x));
PS1i = floatBitsToInt(tempResultf);
// 6
R0i.x = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.x), intBitsToFloat(PS1i)));
R0i.y = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.y), intBitsToFloat(PS1i)));
R0i.z = floatBitsToInt(mul_nonIEEE(intBitsToFloat(R127i.z), intBitsToFloat(PS1i)));
// export
passPixelColor0 = vec4(0.0);
//passPixelColor0 = vec4(intBitsToFloat(R0i.x), intBitsToFloat(R0i.y), intBitsToFloat(R0i.z), intBitsToFloat(R0i.w));
}
